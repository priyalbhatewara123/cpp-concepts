/*
PROBLEM STATEMENT:
string keypad[] = { "", "", "abc", "def", "ghi", "jkl" , "mno", "pqrs" , "tuv", "wxyz" };
string searchIn [] = {
            "prateek", "sneha", "deepak", "arnav", "shikha", "palak",
            "utkarsh", "divyam", "vidhi", "sparsh", "akku"
    };
Print the strings that contain the strings generated by numeric string str.

Sample test case:
Input:
34
Output:
vidhi
divyam
sneha

Explanation
34 will result into combinations :

*dg         *eg         *fg
*dh         *eh         *fh
*di         *ei         *fi
Corresponding strings are output.

vidhi contains dh
divyam contains di
sneha contains eh
*/

#include<bits/stdc++.h>
using namespace std;

string keypad[] = { "", "", "abc", "def", "ghi", "jkl" , "mno", "pqrs" , "tuv", "wxyz" };
string searchIn [] = {
	"prateek", "sneha", "deepak", "arnav", "shikha", "palak",
	"utkarsh", "divyam", "vidhi", "sparsh", "akku"
};

void smartKeypad(char *input , char *output , int i , int j) {

	//base case
	if (input[i] == '\0') {
		output[j] = '\0';

		//converting the output character array to string
		string out;
		for (int indx = 0; output[indx] != '\0' ; indx++) {
			out += output[indx];
		}
		for (int k = 0; k < 11; k++) {
			size_t found = searchIn[k].find(out);
			if (found != string::npos) {
				cout << searchIn[k] << endl;
			}
		}
		return;
	}

	//recursive case
	int digit = input[i] - '0';
	for (int k = 0; keypad[digit][k] != '\0' ; k++) {
		output[j] = keypad[digit][k];
		smartKeypad(input, output, i + 1, j + 1);
	}
	return;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	char input[10];
	cin >> input;

	char output[10];

	smartKeypad(input, output, 0, 0);

	return 0;
}